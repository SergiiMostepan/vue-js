{"remainingRequest":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/src/components/Map.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/src/components/Map.vue","mtime":1600877760502},{"path":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/applestock/Desktop/IT/Собесы/vue-js/vue-js/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1hcC1jb250YWluZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7Cn0KLm1hcCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgoubWFwLWJ1dHRvbiB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAxOTlweDsKICBoZWlnaHQ6IDQ0cHg7CiAgbGVmdDogMjVweDsKICB0b3A6IDEwNXB4OwogIGJvcmRlcjogbm9uZTsKICBiYWNrZ3JvdW5kOiAjYzdjN2M3OwogIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7CiAgdHJhbnNpdGlvbjogMC40czsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IDAgMzBweDsKICBjdXJzb3I6IHBvaW50ZXI7CgogIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2E7CiAgZm9udC1zaXplOiAxNXB4OwogIGxpbmUtaGVpZ2h0OiAxNjAlOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgY29sb3I6ICNmZmZmZmY7Cn0KLm1hcC1idXR0b24tb3BlbiB7CiAgbGVmdDogNTRweDsKICB0b3A6IDU0cHg7CiAgdHJhbnNmb3JtOiByb3RhdGUoLTBkZWcpOwogIHRyYW5zaXRpb246IDAuNHM7Cn0KLmJ0bi1hcnJvdyB7CiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQouaW5mb1dpbmRvdyB7CiAgbGlzdC1zdHlsZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9Ci5pbmZvV2luZG93LW5hbWUgewogIG1hcmdpbjogMDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHsKICAubWFwLWJ1dHRvbiB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KfQo="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"map-container\">\n    <div class=\"map\">\n      <GmapMap\n        :center=\"{ lat: 52.5, lng: 13.4 }\"\n        :zoom=\"10\"\n        map-type-id=\"terrain\"\n        style=\"width: 100%; height: 824px\"\n        class=\"g-map\"\n      >\n        <GmapInfoWindow\n          :options=\"infoOptions\"\n          :position=\"infoWindowPos\"\n          :opened=\"infoWinOpen\"\n          @closeclick=\"infoWinOpen = false\"\n        >\n          <ul class=\"infoWindow\">\n            <li>\n              <h3 class=\"infoWindow-name\">{{ infoContent.name }}</h3>\n            </li>\n            <li>\n              {{ infoContent.address }}\n            </li>\n            <li>\n              {{ infoContent.phone }}\n            </li>\n          </ul>\n        </GmapInfoWindow>\n        <GmapMarker\n          :key=\"index\"\n          v-for=\"(m, index) in markers\"\n          :position=\"m.position\"\n          :clickable=\"true\"\n          :draggable=\"false\"\n          @click=\"toggleInfoWindow(m, index)\"\n        />\n      </GmapMap>\n      <button\n        class=\"map-button\"\n        :class=\"{\n          'map-button-open': this.$store.state.isMapOpen === true,\n        }\"\n        @click=\"toggleMap\"\n      >\n        <div>\n          {{ this.$store.state.isMapOpen === true ? \"Hide\" : \"Show\" }} the map\n        </div>\n        <div class=\"btn-arrow\">\n          <svg\n            width=\"12\"\n            height=\"6\"\n            viewBox=\"0 0 12 6\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M1 7L7 1L13 7\" stroke=\"white\" />\n          </svg>\n          <svg\n            width=\"12\"\n            height=\"6\"\n            viewBox=\"0 0 12 6\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M1 7L7 1L13 7\" stroke=\"white\" />\n          </svg>\n        </div>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Data from \"../data/data.json\";\nexport default {\n  name: \"Map\",\n  data() {\n    return {\n      center: {\n        lat: 10.0,\n        lng: 10.0,\n      },\n      infoContent: \"\",\n      infoWindowPos: null,\n      infoWinOpen: false,\n      currentMidx: null,\n      infoOptions: {\n        pixelOffset: {\n          width: 0,\n          height: -35,\n        },\n      },\n    };\n  },\n  computed: {\n    markers: function() {\n      const data = Data.map((item) => {\n        return {\n          position: { lat: item.latitude, lng: item.longitude },\n          infoText: {\n            name: item.name,\n            address: item.address,\n            phone: item.phone,\n          },\n        };\n      });\n      return data;\n    },\n  },\n  methods: {\n    toggleInfoWindow: function(marker, idx) {\n      this.infoWindowPos = marker.position;\n      this.infoContent = marker.infoText;\n\n      //check if its the same marker that was selected if yes toggle\n      if (this.currentMidx == idx) {\n        this.infoWinOpen = !this.infoWinOpen;\n      }\n      //if different marker set infowindow to open and reset current marker index\n      else {\n        this.infoWinOpen = true;\n        this.currentMidx = idx;\n      }\n    },\n    toggleMap: function() {\n      this.$store.dispatch(\"toggleMapOpen\");\n    },\n  },\n};\n</script>\n\n<style>\n.map-container {\n  background-color: #eeeeee;\n}\n.map {\n  position: relative;\n}\n\n.map-button {\n  position: absolute;\n  width: 199px;\n  height: 44px;\n  left: 25px;\n  top: 105px;\n  border: none;\n  background: #c7c7c7;\n  transform: rotate(-90deg);\n  transition: 0.4s;\n  display: flex;\n  justify-content: center;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 30px;\n  cursor: pointer;\n\n  font-family: Helvetica;\n  font-size: 15px;\n  line-height: 160%;\n  text-transform: uppercase;\n  color: #ffffff;\n}\n.map-button-open {\n  left: 54px;\n  top: 54px;\n  transform: rotate(-0deg);\n  transition: 0.4s;\n}\n.btn-arrow {\n  transform: rotate(90deg);\n  display: flex;\n  flex-direction: column;\n}\n.infoWindow {\n  list-style: none;\n  padding: 0;\n}\n.infoWindow-name {\n  margin: 0;\n}\n\n@media (min-width: 320px) and (max-width: 767px) {\n  .map-button {\n    display: none;\n  }\n}\n</style>\n"]}]}